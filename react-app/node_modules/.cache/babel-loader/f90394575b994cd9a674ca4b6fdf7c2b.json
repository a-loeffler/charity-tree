{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport session from \"./session\";\nconst rootReducer = combineReducers({\n  session\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/home/msineath/desktop/appAcademy/feb-cohort/week19/project/kickstarter-clone/react-app/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","session","rootReducer","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,EAAuDC,OAAvD,QAAsE,OAAtE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,WAAW,GAAGL,eAAe,CAAC;AAChCI,EAAAA;AADgC,CAAD,CAAnC;AAKA,IAAIE,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,EAAAA,QAAQ,GAAGL,eAAe,CAACE,KAAD,CAA1B;AACH,CAFD,MAEO;AACH,QAAMO,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GAClBC,MAAM,CAACC,oCAAP,IAA+Cb,OADnD;AAEAI,EAAAA,QAAQ,GAAGO,gBAAgB,CAACZ,eAAe,CAACE,KAAD,EAAQO,MAAR,CAAhB,CAA3B;AACH;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;AACvC,SAAOlB,WAAW,CAACM,WAAD,EAAcY,cAAd,EAA8BX,QAA9B,CAAlB;AACH,CAFD;;AAIA,eAAeU,cAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport session from \"./session\"\n\nconst rootReducer = combineReducers({\n    session\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n} else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n    return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}